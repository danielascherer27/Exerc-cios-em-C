Ex 01:

#include <stdio.h>
#include <string.h>
int calTamanho(char str[]){
    int tamanho = 0;
    while (str[tamanho] != '\0'){
        tamanho++;
    }
    return tamanho;
}
void transMaiuscula(char *str) {
    for (int i = 0; str[i] != '\0'; i++) {
        if (str[i] >= 'a' && str[i] <= 'z'){
            str[i] -= ('a' - 'A');
        }
    }
}
void transMinuscula(char *str) {
    for (int i = 0; str[i] != '\0'; i++) {
        if (str[i] >= 'A' && str[i] <= 'Z'){
            str[i] += ('a' - 'A');
        }
    }
}
int main() {
    char palavra1[20], palavra2[20];
    printf("\nDigite a primeira palavra:\n");
    scanf("%s", palavra1);
    printf("\nDigite a segunda palavra:\n");
    scanf("%s", palavra2);

    int tam1 = calTamanho(palavra1);
    int tam2 = calTamanho(palavra2);

    if (tam1 > tam2) {
        transMaiuscula(palavra1);
        transMinuscula(palavra2);
        printf("\nMaior palavra em maiusculas: %s\n", palavra1);
        printf("Menor palavra em minusculas: %s\n", palavra2);
    } else {
        transMaiuscula(palavra2);
        transMinuscula(palavra1);
        printf("\nMaior palavra em maiusculas: %s\n", palavra2);
        printf("Menor palavra em minusculas: %s\n", palavra1);
    }
    return 0;
}



Ex 02:

#include <stdio.h>
#include <string.h>
int calTamanho(char str[]){
    int tamanho = 0;
    while (str[tamanho] != '\0'){
        tamanho++;
    }
    return tamanho;
}
int main() {
    char palavra1[20], palavra2[20], resultado[40];
    printf("\nDigite a primeira palavra:\n");
    scanf("%s", palavra1);
    printf("\nDigite a segunda palavra:\n");
    scanf("%s", palavra2);
    int tam1 = calTamanho(palavra1);
    int tam2 = calTamanho(palavra2);
    if (tam1 != tam2) {
        strcpy(resultado, palavra2);
        strcat(resultado, palavra1);
        printf("\nConcatenacao da segunda com a primeira:%s\n", resultado);
    } else {
        printf("\nOs comprimentos das strings s√£o iguais.\n");
        printf("Primeira palavra: %s\n", palavra1);
        printf("Segunda palavra: %s\n", palavra2);
    }
    return 0;
}



Ex 03:

#include <stdio.h>
int main() {
    char entrada[100];
    printf("Digite uma string:");
    scanf("%s", entrada);
    for (int i = 0; entrada[i] != '\0'; i++){
        printf("%c\n", entrada[i]);
    }
    return 0;
}



Ex 04:

#include <stdio.h>
int main() {
    char entrada[100];
    printf("Digite uma string:");
    scanf("%s", entrada);
    for (int i = 0; entrada[i] != '\0'; i++){
        for (int j = 0; j <= i; j++) {
            printf("%c", entrada[i]);
        }
        printf("\n");
    }
    return 0;
}


Ex 05:

#include <stdio.h>
#include <string.h>
int main(){
    char palavra[] = "LINUX";
    int tamanho = strlen(palavra);
    for (int i = 1; i <= tamanho; i++){
        for (int j = 0; j < i; j++) {
            printf("%c", palavra[j]);
        }
        printf("\n");
    }
    for (int i = tamanho - 1; i > 0; i--){
        for (int j = 0; j < i; j++){
            printf("%c", palavra[j]);
        }
        printf("\n");
    }
    return 0;
}


Ex 06:

#include <stdio.h>
#include <string.h>
void remvCaract(char *s, int pos, int qtd){
    int len = strlen(s);
    if (pos < 0 || pos >= len){
        printf("A posicao inicial esta alem dos limites da string alvo.\n");
        return;
    }
    if (qtd <= 0) {
        printf("O numero de caracteres a serem removidos deve ser superior a zero.\n");
        return;
    }
    int caractRestantes = len - (pos + qtd);
    memmove(s + pos, s + pos + qtd, caractRestantes + 1);
}
int main() {
    char entrada[100];
    int posicao, quantidade;
    printf("\nDigite a string:\n");
    scanf("%s", entrada);
    printf("\nDigite a posicao inicial para remover os caracteres:\n");
    scanf("%d", &posicao);
    printf("\nDigite a quantidade de caracteres a remover:\n");
    scanf("%d", &quantidade);
    remvCaract(entrada, posicao, quantidade);
    printf("\nString modificada: %s\n", entrada);
    return 0;
}



Ex 07:

#include <stdio.h>
#include <string.h>
void insString(char *dest, const char *src, int pos){
    int lenDest = strlen(dest);
    int lenSrc = strlen(src);
    if (pos < 0 || pos > lenDest){
        printf("A posicao inicial esta alem dos limites da string alvo.\n");
        return;
    }
    memmove(dest + pos + lenSrc + 1, dest + pos, lenDest - pos + 1);
    dest[pos + lenSrc] = ' ';
    memcpy(dest + pos, src, lenSrc);
}
int main(){
    char str1[100] = "By Tanenbaum";
    char str2[] = "Andrew";
    int posicao = 3;
    printf("String original: %s\n", str1);
    printf("String a ser inserida: %s\n", str2);
    insString(str1, str2, posicao);
    printf("String modificada: %s\n", str1);
    return 0;
}
